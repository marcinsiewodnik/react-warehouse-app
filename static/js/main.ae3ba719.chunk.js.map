{"version":3,"sources":["layouts/Header.js","layouts/Navigation.js","pages/Description.js","components/ProductView.js","pages/ProductListView.js","components/TransactionView.js","pages/TransactionListView.js","pages/AddNewProduct.js","components/SellProduct.js","pages/SellProductList.js","components/Product.js","pages/ProducList.js","layouts/Page.js","layouts/Footer.js","layouts/App.js","index.js"],"names":["Header","list","name","path","exact","Navigation","menu","map","item","key","to","className","Description","ProductView","product","id","category","unitPrice","quantityInStock","ProductListView","products","TransactionView","transaction","type","productId","productName","productCategory","productUnitPrice","quantity","TransactionList","transactionList","transactions","AddNewProduct","state","changeNameDetected","validation","incorrectName","handleChange","e","target","value","setState","trim","length","prevState","handleIncreasePrice","handleDecreasePrice","handleSubmit","addNewProduct","props","this","htmlFor","onChange","disabled","onClick","style","opacity","React","Component","SellProduct","handleSell","sell","quantityToSell","Date","handleAddtoSell","changeDetected","handleRemoveFromSell","SellProductList","Product","initialName","initialCategory","changeCategoryDetected","handleClick","changeProduct","add","changeQuantityDetected","amountAdded","initialQuantity","console","log","changePriceDetected","handleRemoveProduct","handleAddProduct","initialPrice","ProductList","Page","component","render","Footer","App","nextProductId","nextTransactionId","generateNextProductId","generateNextTransactionId","fetchProducts","fetchTransactions","newProduct","concat","transactionQuantity","transactionDate","transactionId","newTransaction","date","newName","newCategory","newPrice","basename","process","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ae3ba719.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <p>Warehouse app</p>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst list = [\r\n\r\n    { name: \"Description\", path: \"/\", exact: true },\r\n    { name: \"product list (view mode)\", path: \"/product-list-view\", exact: false },\r\n    { name: \"transaction list (view mode)\", path: \"/transaction-list-view\", exact: false },\r\n\r\n    { name: \"add new product (change mode)\", path: \"/add-new-product\", exact: false },\r\n    { name: \"sell product (change mode)\", path: \"/sell-product-list\", exact: false },\r\n    { name: \"product list (change mode)\", path: \"/product-list\", exact: false }\r\n\r\n]\r\n\r\nconst Navigation = () => {\r\n\r\n    const menu = list.map(item => {\r\n\r\n        return (\r\n\r\n            <li key={item.name}>\r\n\r\n                <NavLink to={item.path} exact={item.exact ? true : false}>{item.name}</NavLink>\r\n\r\n            </li>\r\n        )\r\n    })\r\n\r\n    return (\r\n\r\n        <nav className=\"main\">\r\n\r\n            <ul>\r\n                {menu}\r\n            </ul>\r\n\r\n        </nav>\r\n    );\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\n\r\nconst Description = () => {\r\n\r\n    return (\r\n\r\n        <div >\r\n\r\n            <h2>Description</h2>\r\n\r\n            <div className=\"description\">\r\n\r\n                <p>Functionality</p>\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Description;","import React from 'react';\r\n\r\nconst ProductView = ({ product }) => {\r\n\r\n    const { id, name, category, unitPrice, quantityInStock } = product;\r\n\r\n    return (\r\n\r\n        <div className=\"product-view\">\r\n\r\n            <p><span>Id: </span><span>{id}</span></p>\r\n            <p><span>Name: </span><span>{name}</span></p>\r\n            <p><span>Category: </span><span>{category}</span></p>\r\n            <p><span>Price: </span><span>{unitPrice}</span></p>\r\n            <p><span>Quantity: </span><span>{quantityInStock}</span></p>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProductView;","import React from 'react';\r\nimport ProductView from '../components/ProductView';\r\n\r\nconst ProductListView = ({ products }) => {\r\n\r\n    products = products.map(product => <ProductView key={product.id} product={product} />)\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <h2>Products</h2>\r\n\r\n            <div>\r\n\r\n                {products}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProductListView;","import React from 'react';\r\n\r\nconst TransactionView = ({ transaction }) => {\r\n\r\n    const { id, type, productId, productName, productCategory, productUnitPrice, quantity } = transaction;\r\n\r\n    return (\r\n\r\n        <div className=\"transaction-view\">\r\n\r\n            <p><span>Id: </span><span>{id}</span></p>\r\n            <p><span>Type: </span><span>{type}</span></p>\r\n            <p><span>Product id: </span><span>{productId}</span></p>\r\n            <p><span>Product name: </span><span>{productName}</span></p>\r\n            <p><span>Product category: </span><span>{productCategory}</span></p>\r\n            <p><span>Product unit price: </span><span>{productUnitPrice}</span></p>\r\n            <p><span>Quantity: </span><span>{quantity}</span></p>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default TransactionView;","import React from 'react';\r\nimport TransactionView from \"../components/TransactionView\";\r\n\r\nconst TransactionList = ({ transactions }) => {\r\n\r\n    const transactionList = transactions.map(transaction => <TransactionView key={transaction.id} transaction={transaction} />);\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <h2>Transactions</h2>\r\n\r\n            <div>\r\n\r\n                {transactionList}\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default TransactionList;","import React from 'react';\r\n\r\nclass AddNewProduct extends React.Component {\r\n\r\n    state = {\r\n\r\n        name: '',\r\n        category: 'fruits',\r\n        unitPrice: 0,\r\n        changeNameDetected: false,\r\n\r\n        validation: {\r\n\r\n            incorrectName: true,\r\n        }\r\n\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        // Name and category -> one method\r\n\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState({\r\n\r\n            [name]: value,\r\n        })\r\n\r\n        if (name === \"name\") {\r\n\r\n            if (value.trim().length < 5) {\r\n\r\n                this.setState((prevState) => ({\r\n\r\n                    validation: { incorrectName: true },\r\n                }))\r\n\r\n            } else {\r\n\r\n                this.setState(() => ({\r\n\r\n                    validation: { incorrectName: false },\r\n                }))\r\n            }\r\n\r\n            this.setState(() => ({\r\n\r\n                changeNameDetected: true\r\n            }))\r\n        }\r\n    }\r\n\r\n    handleIncreasePrice = () => {\r\n\r\n        this.setState({\r\n\r\n            unitPrice: this.state.unitPrice + 1,\r\n        })\r\n    }\r\n\r\n    handleDecreasePrice = () => {\r\n\r\n        this.setState({\r\n\r\n            unitPrice: this.state.unitPrice - 1,\r\n        })\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n\r\n        const { name, category, unitPrice } = this.state;\r\n        const { addNewProduct } = this.props;\r\n\r\n        addNewProduct(name, category, unitPrice);\r\n\r\n        // After submitting -> clear the values\r\n\r\n        this.setState((prevState) => ({\r\n\r\n            name: '',\r\n            category: \"fruits\",\r\n            unitPrice: 0,\r\n            changeNameDetected: false,\r\n\r\n            validation: {\r\n                incorrectName: false,\r\n            }\r\n        }))\r\n    }\r\n\r\n    render() {\r\n\r\n        const { unitPrice, category, validation, changeNameDetected } = this.state;\r\n\r\n        const { incorrectName } = validation;\r\n\r\n        return (\r\n\r\n            <div className=\"add-new-product\">\r\n\r\n                <h2>Add new product</h2>\r\n\r\n                <div className=\"form\">\r\n\r\n                    <p>\r\n                        <label htmlFor=\"name\">Name: </label>\r\n                        <input id=\"name\" name=\"name\" type=\"text\" value={this.state.name} onChange={this.handleChange} />\r\n\r\n                    </p>\r\n\r\n                    {this.state.validation.incorrectName && changeNameDetected &&\r\n\r\n                        <p className=\"p-error\"><span></span><span>Name has to be at least 5 characters long.</span></p>\r\n\r\n                    }\r\n\r\n                    <p>\r\n                        <label htmlFor=\"category\">Category</label>\r\n                        <select id=\"category\" name=\"category\" value={category} onChange={this.handleChange}>\r\n\r\n                            <option value=\"fruits\">fruits</option>\r\n                            <option value=\"sweets\">sweets</option>\r\n                            <option value=\"drinks\">drinks</option>\r\n                            <option value=\"dairy\">dairy</option>\r\n                            <option value=\"other\">other</option>\r\n\r\n                        </select>\r\n                    </p>\r\n\r\n                    <p>\r\n\r\n                        <label htmlFor=\"\">Price</label>\r\n                        <p className=\"change-panel\">\r\n\r\n\r\n                            <button className=\"decrease\" disabled={unitPrice === 0} onClick={this.handleDecreasePrice}>-</button>\r\n                            <span className=\"span-value\" style={unitPrice < 0 ? { opacity: 0.3 } : {}}>{unitPrice}</span>\r\n                            <button className=\"increase\" onClick={this.handleIncreasePrice}>+</button>\r\n                        </p>\r\n\r\n                    </p>\r\n\r\n                    <p>\r\n\r\n                        <button className=\"btn-add-product\" disabled={incorrectName} onClick={this.handleSubmit} type=\"submit\">Add product</button>\r\n                    </p>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddNewProduct;","import React from 'react';\r\n\r\nclass SellProduct extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n\r\n        const { product } = props;\r\n\r\n        this.state = {\r\n\r\n            id: product.id,\r\n            name: product.name,\r\n            category: product.category,\r\n            quantityInStock: product.quantityInStock,\r\n            unitPrice: product.unitPrice,\r\n            quantityToSell: 0,\r\n            changeDetected: false\r\n        }\r\n    }\r\n\r\n\r\n    handleSell = (e) => {\r\n\r\n        const { sell } = this.props;\r\n\r\n        const { quantityToSell, id, name, category, unitPrice } = this.state;\r\n\r\n        sell(quantityToSell, new Date(), id, name, category, unitPrice);\r\n\r\n        this.setState((prevState) => ({\r\n\r\n            quantityToSell: 0,\r\n            quantityInStock: prevState.quantityInStock - quantityToSell\r\n        }))\r\n    }\r\n\r\n    handleAddtoSell = () => {\r\n\r\n        this.setState((prevState) => ({\r\n\r\n            quantityToSell: prevState.quantityToSell + 1,\r\n            changeDetected: true,\r\n\r\n        }))\r\n    }\r\n\r\n    handleRemoveFromSell = () => {\r\n\r\n        this.setState((prevState) => ({\r\n\r\n            quantityToSell: prevState.quantityToSell - 1,\r\n            changeDetected: true,\r\n\r\n        }))\r\n    }\r\n\r\n    render() {\r\n\r\n        const { id, name, category, unitPrice } = this.props.product;\r\n\r\n        const { quantityToSell, quantityInStock, changeDetected } = this.state;\r\n\r\n        return (\r\n\r\n            <div className=\"product-sell\">\r\n\r\n                <p><span>Id: </span><span>{id}</span></p>\r\n                <p><span>name: </span><span>{name}</span></p>\r\n                <p><span>Category: </span><span>{category}</span></p>\r\n                <p><span>Unit Price: </span><span>{unitPrice}</span></p>\r\n                <p><span>Quantity in Stock: </span><span>{quantityInStock}</span></p>\r\n\r\n                <p>\r\n                    <label htmlFor=\"\">Quantity </label>\r\n                    <button className=\"decrease\" disabled={quantityToSell === 0} onClick={this.handleRemoveFromSell}>-</button>\r\n                    <span className=\"span-value\" style={quantityToSell === 0 ? { opacity: 0.3 } : {}}>{quantityToSell}</span>\r\n                    <button className=\"increase\" disabled={quantityToSell === quantityInStock} onClick={this.handleAddtoSell}>+</button>\r\n                </p>\r\n\r\n                <p>\r\n                    <button className=\"btn-sell\" disabled={!changeDetected || quantityToSell === 0} onClick={this.handleSell}>Sell product</button>\r\n                </p>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SellProduct;","import React from 'react';\r\nimport SellProduct from '../components/SellProduct'\r\n\r\nconst SellProductList = ({ products, sell }) => {\r\n\r\n    products = products.map(product => {\r\n\r\n        return (\r\n\r\n            <SellProduct key={product.id} product={product} sell={sell} />\r\n        )\r\n    });\r\n\r\n    return (\r\n\r\n        <div className=\"products\">\r\n\r\n            <h2>Sell product</h2>\r\n\r\n            {products}\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default SellProductList;","import React from 'react';\r\n\r\nclass Product extends React.Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        const { product } = props;\r\n\r\n        this.state = {\r\n\r\n            id: product.id,\r\n            name: product.name,\r\n            category: product.category,\r\n            quantityInStock: product.quantityInStock,\r\n            unitPrice: product.unitPrice,\r\n\r\n            initialName: product.name,\r\n            initialCategory: product.category,\r\n            initialPrice: product.unitPrice,\r\n            initialQuantity: product.quantityInStock,\r\n\r\n            changeNameDetected: false,\r\n            changeCategoryDetected: false,\r\n            changePriceDetected: false,\r\n            changeQuantityDetected: false,\r\n\r\n            validation: {\r\n\r\n                incorrectName: false\r\n            }\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n\r\n        // name and category\r\n\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n\r\n        this.setState((prevState) => {\r\n\r\n            return ({\r\n\r\n                [name]: value,\r\n            })\r\n        })\r\n\r\n        if (name === \"name\") {\r\n\r\n            this.setState((prevState) => {\r\n\r\n                if (prevState.name === prevState.initialName) {\r\n\r\n                    return ({\r\n\r\n                        changeNameDetected: false,\r\n                    })\r\n\r\n                } else {\r\n\r\n                    return ({\r\n\r\n                        changeNameDetected: true,\r\n                    })\r\n                }\r\n            })\r\n\r\n            if (value.trim().length < 5) {\r\n\r\n                this.setState((prevState) => {\r\n\r\n                    return ({\r\n\r\n                        validation: { incorrectName: true }\r\n                    })\r\n                })\r\n\r\n            } else {\r\n\r\n                this.setState((prevState) => {\r\n\r\n                    return ({\r\n\r\n                        validation: { incorrectName: false }\r\n                    })\r\n\r\n                })\r\n            }\r\n        } else if (name === \"category\") {\r\n\r\n            this.setState((prevState) => {\r\n\r\n                if (prevState.category === prevState.initialCategory) {\r\n\r\n                    return ({\r\n\r\n                        changeCategoryDetected: false,\r\n\r\n                    })\r\n\r\n                } else {\r\n\r\n                    return ({\r\n\r\n                        changeCategoryDetected: true,\r\n                    })\r\n                }\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    handleClick = (e) => {\r\n\r\n        const { id, name, category, unitPrice } = this.state;\r\n        const { changeProduct, add } = this.props;\r\n\r\n        changeProduct(id, name, category, unitPrice);\r\n\r\n        if (this.state.changeQuantityDetected) {\r\n\r\n            const amountAdded = this.state.quantityInStock - this.state.initialQuantity;\r\n\r\n            console.log(amountAdded, id, name, category, unitPrice);\r\n\r\n            add(amountAdded, new Date(), id, name, category, unitPrice)\r\n        }\r\n\r\n        this.setState((prevState) => ({\r\n\r\n            changeNameDetected: false,\r\n            changeCategoryDetected: false,\r\n            changePriceDetected: false,\r\n            changeQuantityDetected: false,\r\n\r\n        }))\r\n\r\n        this.setState((prevState) => ({\r\n\r\n            validation: { incorrectName: false }\r\n        }))\r\n    }\r\n\r\n    handleRemoveProduct = () => {\r\n\r\n        this.setState((prevState) => ({\r\n\r\n            quantityInStock: prevState.quantityInStock - 1,\r\n        }))\r\n\r\n        this.setState((prevState) => ({\r\n\r\n            changeQuantityDetected: prevState.quantityInStock !== prevState.initialQuantity\r\n        }))\r\n    }\r\n\r\n    handleAddProduct = () => {\r\n\r\n        this.setState((prevState) => ({\r\n\r\n            quantityInStock: prevState.quantityInStock + 1,\r\n        }))\r\n\r\n        this.setState((prevState) => ({\r\n\r\n            changeQuantityDetected: prevState.quantityInStock !== prevState.initialQuantity\r\n        }))\r\n    }\r\n\r\n    handleIncreasePrice = (e) => {\r\n\r\n        this.setState((prevState) => ({\r\n\r\n            unitPrice: prevState.unitPrice + 1,\r\n\r\n        }))\r\n\r\n        this.setState((prevState) => ({\r\n\r\n            changePriceDetected: prevState.unitPrice !== prevState.initialPrice\r\n        }))\r\n    }\r\n\r\n    handleDecreasePrice = () => {\r\n\r\n        this.setState((prevState) => ({\r\n\r\n            unitPrice: prevState.unitPrice - 1,\r\n\r\n        }))\r\n\r\n        this.setState((prevState) => ({\r\n\r\n            changePriceDetected: prevState.unitPrice !== prevState.initialPrice\r\n        }))\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const { id, name, category, quantityInStock, initialQuantity, unitPrice, validation } = this.state;\r\n        const { incorrectName } = validation;\r\n\r\n\r\n        const { changeNameDetected, changeCategoryDetected, changePriceDetected, changeQuantityDetected } = this.state;\r\n        const changeDetected = changeNameDetected || changeCategoryDetected || changePriceDetected || changeQuantityDetected;\r\n\r\n        return (\r\n\r\n            <div className=\"product\">\r\n\r\n                <p> <span>Id: </span> <span>{id}</span>  </p>\r\n                <p>\r\n                    <label htmlFor=\"\">Name </label>\r\n                    <input type=\"text\" name=\"name\" value={name} onChange={this.handleChange} />\r\n\r\n                </p>\r\n\r\n                {this.state.validation.incorrectName &&\r\n\r\n                    <p>\r\n                        <span>Name has to be at least 5 characters long.</span>\r\n                    </p>\r\n\r\n                }\r\n\r\n                <p>\r\n                    <label htmlFor=\"\">Category </label>\r\n                    <select type=\"checkbox\" name=\"category\" value={category} onChange={this.handleChange}>\r\n\r\n                        <option value=\"fruits\">fruits</option>\r\n                        <option value=\"sweets\">sweets</option>\r\n                        <option value=\"drinks\">drinks</option>\r\n                        <option value=\"dairy\">dairy</option>\r\n                        <option value=\"other\">other</option>\r\n\r\n                    </select>\r\n                </p>\r\n\r\n                <p>\r\n                    <label htmlFor=\"\">Price </label>\r\n                    <button className=\"decrease\" disabled={unitPrice === 0} onClick={this.handleDecreasePrice}>-</button>\r\n                    <span className=\"span-value\" style={unitPrice < 0 ? { opacity: 0.3 } : {}}>{unitPrice}</span>\r\n                    <button className=\"decrease\" onClick={this.handleIncreasePrice}>+</button>\r\n                </p>\r\n\r\n                <p>\r\n\r\n                    <label htmlFor=\"\">Quantity </label>\r\n                    <button className=\"decrease\" disabled={quantityInStock === initialQuantity} onClick={this.handleRemoveProduct}>-</button>\r\n                    <span className=\"span-value\" style={quantityInStock <= initialQuantity ? { opacity: 0.3 } : {}}>{quantityInStock}</span>\r\n                    <button className=\"increase\" onClick={this.handleAddProduct}>+</button>\r\n\r\n                </p>\r\n\r\n                <p className=\"p-button\">\r\n\r\n                    <button className=\"btn-save\" disabled={(!changeDetected) || incorrectName} onClick={this.handleClick}>Save changes</button>\r\n\r\n                </p>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Product;","import React from 'react';\r\nimport Product from '../components/Product';\r\n\r\nconst ProductList = ({ products, changeProduct, add }) => {\r\n\r\n    products = products.map(product => {\r\n\r\n        return (\r\n\r\n            <Product key={product.id} product={product} changeProduct={changeProduct} add={add} />\r\n        )\r\n    })\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <h2>Products</h2>\r\n\r\n            <div>\r\n\r\n                {products}\r\n\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default ProductList;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\n\r\nimport Description from \"../pages/Description.js\"\r\nimport ProductListView from \"../pages/ProductListView.js\"\r\nimport TransationListView from \"../pages/TransactionListView\";\r\nimport AddNewProduct from \"../pages/AddNewProduct\";\r\nimport SellProductList from \"../pages/SellProductList\";\r\nimport ProductList from \"../pages/ProducList.js\";\r\n\r\nconst Page = ({ products, transactions, addNewProduct, add, sell, changeProduct }) => {\r\n\r\n    return (\r\n\r\n        <div className=\"page\">\r\n\r\n            <Switch>\r\n\r\n                <Route path=\"/\" exact={true} component={Description} />\r\n\r\n                <Route path=\"/product-list-view\" render={(props) => (\r\n\r\n                    // View mode -> we can only see the products, we cannot change them\r\n\r\n                    <ProductListView {...props} products={products} />\r\n                )} />\r\n\r\n                <Route path=\"/transaction-list-view\" render={(props) => (\r\n\r\n                    // We can't change transactions at all\r\n\r\n                    <TransationListView {...props} transactions={transactions} />\r\n                )} />\r\n\r\n                <Route path=\"/add-new-product\" render={(props) => (\r\n\r\n                    <AddNewProduct {...props} products={products} addNewProduct={addNewProduct} />\r\n                )} />\r\n\r\n                <Route path=\"/sell-product-list\" render={(props) => (\r\n\r\n                    // To sell a given product we need information about the available quantity in stock\r\n                    // If we sell a given product a sell transaction will be generated\r\n\r\n                    <SellProductList {...props} products={products} sell={sell} />\r\n\r\n                )} />\r\n\r\n                <Route path=\"/product-list\" render={(props) => (\r\n\r\n                    // If we increase the quantity -> an add transaction will be generated\r\n\r\n                    <ProductList {...props} products={products} changeProduct={changeProduct} add={add} />\r\n                )} />\r\n\r\n            </Switch>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Page;","import React from 'react';\r\n\r\nconst Footer = () => {\r\n\r\n    return (\r\n\r\n        <div>\r\n            <p>Marcin Siewodnik</p>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport Header from './Header'\nimport Navigation from './Navigation'\nimport Page from './Page'\nimport Footer from './Footer'\n\nimport '../styles/App.sass';\n\nclass App extends React.Component {\n\n  state = {\n\n    products: [],\n    transactions: [],\n  }\n\n  id = {\n\n    nextProductId: 0,\n    nextTransactionId: 0,\n  }\n\n  generateNextProductId = () => {\n\n    const id = this.id.nextProductId++;\n\n    return id;\n  }\n\n  generateNextTransactionId = () => {\n\n    const id = this.id.nextTransactionId++;\n\n    return id;\n  }\n\n  // Fetching data\n\n  componentDidMount() {\n\n    const products = this.fetchProducts();\n    const transactions = this.fetchTransactions();\n\n    this.setState({ products, transactions })\n  }\n\n  fetchProducts = () => {\n\n    return [\n      {\n\n        id: this.generateNextProductId(),\n        name: 'orange juice',\n        category: 'drinks',\n        unitPrice: 4,\n        quantityInStock: 5\n\n      },\n\n      {\n        id: this.generateNextProductId(),\n        name: 'cookie',\n        category: 'sweets',\n        unitPrice: 2,\n        quantityInStock: 5\n\n      },\n\n      {\n\n        id: this.generateNextProductId(),\n        name: 'apple',\n        category: 'fruits',\n        unitPrice: 3,\n        quantityInStock: 5\n\n      }\n\n    ]\n\n  }\n\n  fetchTransactions = () => {\n\n    return [\n\n      {\n        id: this.generateNextTransactionId(),\n        type: \"add\",\n        productId: 0,\n        productName: \"orange juice\",\n        productCategory: \"drinks\",\n        productUnitPrice: 4,\n        quantity: 5,\n      },\n\n      {\n        id: this.generateNextTransactionId(),\n        type: \"add\",\n        productId: 1,\n        productName: \"cookie\",\n        productCategory: \"sweet\",\n        productUnitPrice: 2,\n        quantity: 5,\n      },\n      {\n        id: this.generateNextTransactionId(),\n        type: \"add\",\n        productId: 1,\n        productName: \"apple\",\n        productCategory: \"fruits\",\n        productUnitPrice: 3,\n        quantity: 5,\n      },\n\n    ]\n\n\n  }\n\n  // Methods for managing the state\n\n  addNewProduct = (name, category, unitPrice, id = this.generateNextProductId()) => {\n\n    // Add a new product, without quantity\n\n    const newProduct = { id, name, category, unitPrice, quantityInStock: 0 }\n\n    this.setState((prevState) => ({ products: prevState.products.concat(newProduct) }));\n  }\n\n  add = (transactionQuantity, transactionDate, productId, productName, productCategory, productUnitPrice, transactionId = this.generateNextTransactionId()) => {\n\n    // Add quantity to an existing product\n\n    const newTransaction = { id: transactionId, type: \"add\", quantity: transactionQuantity, date: transactionDate, productId, productName, productCategory, productUnitPrice }\n\n    this.setState((prevState) => {\n\n      const products = prevState.products.map(product => {\n\n        // Create a new instance\n\n        const newProduct = {\n\n          id: product.id,\n          name: product.name,\n          category: product.category,\n          unitPrice: product.unitPrice,\n          quantityInStock: product.quantityInStock,\n\n\n        }\n\n        // Increase quantity of a given product\n\n        if (product.id === productId) {\n\n          newProduct.quantityInStock += transactionQuantity;\n\n        }\n\n        return newProduct;\n\n      });\n\n\n      return ({ products, transactions: prevState.transactions.concat(newTransaction) });\n    });\n  }\n\n  sell = (transactionQuantity, transactionDate, productId, productName, productCategory, productUnitPrice, transactionId = this.generateNextTransactionId()) => {\n\n    // Sell -> decrease quantity of a given product and create a sell transaction\n\n    const newTransaction = { id: transactionId, type: \"sell\", quantity: transactionQuantity, date: transactionDate, productId, productName, productCategory, productUnitPrice }\n\n    this.setState((prevState) => {\n\n      const products = prevState.products.map(product => {\n\n        if (product.id === productId) {\n\n          product.quantityInStock -= transactionQuantity;\n        }\n\n        return product;\n\n      });\n\n      return ({ products, transactions: prevState.transactions.concat(newTransaction) });\n    });\n\n  }\n\n  changeProduct = (id, newName, newCategory, newPrice) => {\n\n    this.setState((prevState) => ({\n\n      products: prevState.products.map(product => {\n\n        if (product.id === id) {\n\n          product.name = newName;\n          product.category = newCategory;\n          product.unitPrice = newPrice;\n\n        }\n\n        return product;\n      })\n    }))\n  }\n\n  // Rendering\n\n  render() {\n\n    // Data flow -> we pass products, transactions, methods to managing the state\n\n    return (\n\n      <Router basename={process.env.PUBLIC_URL}>\n\n        <div className=\"app\">\n\n          <header>{<Header />}</header>\n\n          <main>\n            <aside>{<Navigation />}</aside>\n            <section className=\"page\">\n\n              {<Page\n\n                products={this.state.products}\n                transactions={this.state.transactions}\n                addNewProduct={this.addNewProduct}\n                add={this.add}\n                sell={this.sell}\n                changeProduct={this.changeProduct}\n\n              />}\n\n            </section>\n\n          </main>\n          <footer>{<Footer />}</footer>\n        </div>\n\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.sass';\nimport App from './layouts/App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}